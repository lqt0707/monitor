name: Build and Publish SDK

on:
  push:
    branches: [main, master]
    paths:
      - 'sdk/**'
      - '.github/workflows/build-and-publish.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'sdk/**'
      - '.github/workflows/build-and-publish.yml'
  release:
    types: [published]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: sdk/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./sdk

    - name: Build all modules
      run: npm run build
      working-directory: ./sdk
      env:
        NODE_ENV: production

    - name: Verify build artifacts
      run: |
        # 检查所有模块的构建产物
        echo "🔍 检查构建产物..."
        
        # 检查core模块
        if [ ! -f "core/dist/index.js" ]; then
          echo "❌ core模块构建失败"
          exit 1
        fi
        
        # 检查web模块
        if [ ! -f "web/dist/index.js" ]; then
          echo "❌ web模块构建失败"
          exit 1
        fi
        
        # 检查taro模块
        if [ ! -f "taro-core/dist/index.js" ]; then
          echo "❌ taro模块构建失败"
          exit 1
        fi
        
        # 检查main模块
        if [ ! -f "dist/index.js" ]; then
          echo "❌ main模块构建失败"
          exit 1
        fi
        
        echo "✅ 所有模块构建成功"
        ls -la */dist/ | grep -E "(core|web|taro|main)"
      working-directory: ./sdk

    - name: Run tests
      run: npm test
      working-directory: ./sdk

  publish-npm:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: sdk/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./sdk

    - name: Build for production
      run: npm run build
      working-directory: ./sdk
      env:
        NODE_ENV: production

    - name: Publish to npm
      run: npm publish
      working-directory: ./sdk
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Generate documentation
      run: |
        npm ci
        npm run build
        # 这里可以添加文档生成命令
      working-directory: ./sdk

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./sdk/docs