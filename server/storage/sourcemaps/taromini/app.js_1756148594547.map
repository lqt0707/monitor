{"version":3,"file":"app.js","mappingstGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taromini/._src_app.ts","webpack://taromini/./src/app.ts?7071"],"sourcesContent":["import { useLaunch, useError } from \"@tarojs/taro\";\nimport { default as Monitor } from \"@monitor/sdk/taro\";\nimport \"./app.scss\";\nfunction App({\n  children\n}) {\n  useLaunch(() => {\n    console.log(\"App launched.\");\n\n    // 使用更显式的初始化方式来确保SDK正确启动\n    try {\n      // 在小程序环境中，需要使用具体的IP地址而不是localhost\n      // 在小程序环境中，需要使用具体的IP地址而不是localhost\n      const serverUrl = \"http://localhost:3001\"; // 统一使用localhost:3001\n\n      console.log(\"🚀 初始化Monitor SDK，服务器地址:\", serverUrl);\n\n      // 方式1: 使用显式配置初始化（推荐，确保环境配置正确）\n      const config = {\n        projectId: \"taromini\",\n        projectVersion: \"1.0.0\",\n        // 添加项目版本信息，与上传的源代码版本保持一致\n        serverUrl,\n        enableInDev: true,\n        // 开发环境启用\n        debug: true,\n        // 启用调试信息\n\n        // 错误监控配置 - 全局自动捕获\n        error: {\n          enabled: true,\n          captureConsole: true,\n          // 自动捕获console.error\n          maxErrors: 50,\n          sampleRate: 1 // 100%采样率\n        },\n        // 性能监控配置 - 全局自动监控\n        performance: {\n          enabled: true,\n          capturePageLoad: true,\n          // 自动捕获页面加载性能\n          captureNetworkTiming: true,\n          // 自动捕获网络请求性能\n          maxPerformance: 100\n        },\n        // 行为监控配置 - 全局自动追踪\n        behavior: {\n          enabled: true,\n          capturePageViews: true,\n          // 自动追踪页面访问\n          captureTaps: true,\n          // 自动追踪点击事件\n          captureRouteChange: true,\n          // 自动追踪路由变化\n          maxBehaviors: 200\n        },\n        // 数据上报配置\n        report: {\n          interval: 15000,\n          // 15秒上报间隔（适合测试观察）\n          batchSize: 10,\n          maxRetries: 2\n        }\n      };\n\n      // 直接使用init方法\n      const sdkInstance = Monitor.init(config);\n      console.log(\"✅ Monitor SDK 初始化成功，实例:\", sdkInstance);\n\n      // 测试SDK状态\n      setTimeout(() => {\n        const sdkStatus = Monitor.getStatus?.();\n        console.log(\"📊 SDK初始化后状态:\", sdkStatus);\n        if (!sdkStatus?.initialized) {\n          console.error(\"❌ SDK初始化失败，可能的原因:\");\n          console.error(\"1. 配置参数不正确\");\n          console.error(\"2. 网络连接问题\");\n          console.error(\"3. Taro环境问题\");\n        } else {\n          console.log(\"✅ SDK完全初始化成功!\");\n        }\n      }, 1000);\n    } catch (error) {\n      console.error(\"❌ Monitor SDK 初始化失败:\", error);\n      console.error(\"错误详情:\", error.message);\n      console.error(\"错误堆栈:\", error.stack);\n    }\n    console.log(\"Monitor SDK initialized with new version\");\n  });\n\n  // 使用useError Hook进行全局错误监听\n  useError(error => {\n    console.log(\"useError Hook捕获到错误:\", error);\n\n    // 新SDK会自动捕获错误，这里只需要记录日志\n    // 手动上报可以使用：\n    // Monitor.captureError(error, { context: 'useError_hook' });\n  });\n\n  // 在App级别直接使用useError Hook，无需错误边界包装\n  return children;\n}\nexport default App;","import '@tarojs/plugin-platform-weapp/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createReactApp } from '@tarojs/plugin-framework-react/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\n\nimport component from \"!!../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=app!./app.ts\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\",\"pages/realworld/realworld\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"WeChat\",\"navigationBarTextStyle\":\"black\"}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"375\":2,\"640\":1.17,\"750\":1,\"828\":0.905},\n  baseFontSize: 20,\n  unitPrecision: undefined,\n  targetUnit: undefined\n})\n"],"names":[],"sourceRoot":""}